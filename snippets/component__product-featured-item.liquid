<!-- snippets/component__product-featured.liquid -->
{% comment %} 
  Product thumbnail with four product photos.
  
  Accepts:
    - product: liquid product object
  
  Usage:
    {% render 'component__product-featured', 
      product: product
    %}
      
  Globals:
    - settings.product_card_border_style: border style of thumbnails
    - settings.product_card_color_border: border color
    - settings.product_card_color_scheme: color scheme of thumbnails
    - settings.product_card_title_font: typography for thumbnail titles
    - settings.product_card_title_capitilization: set the capitilization for thumbnail titles
    - settings.product_card_enable_type: boolean to enable product type
    - settings.product_card_enable_vendor: boolean to enable vendor
    - settings.product_card_enable_count: boolean to enable variant count
    - settings.type_seperator: setting to pick the type of seperator between text
  
  Pro tips:
    - Use this while looping through products.
{% endcomment %}

<div class="relative w-full
  {% if settings.product_card_border_style == 'thumbnail' %}
    border--radius overflow-hidden
    {{ settings.product_card_color_border }} 
    {{ settings.product_card_color_scheme }} 
  {% endif %}">

  {% comment %} Badges {% endcomment %}
  {% liquid
    capture badge_background
      if settings.product_card_badge_scheme == "light_outline" or settings.product_card_badge_scheme == "dark_outline"
        echo "trasnsparent"
      else
        echo settings.product_card_badge_scheme
      endif
    endcapture
    capture badge_foreground
      if settings.product_card_badge_scheme == "light_outline"
        echo "light"
      elsif settings.product_card_badge_scheme == "dark_outline"
        echo "dark"
      else
        echo settings.product_card_badge_scheme
      endif
    endcapture
  %}
  <div class="absolute top-0 left-0 z-10 flex flex-wrap w-full gap-1 p-2 whitespace-normal">

    {% comment %} Review {% endcomment %}
    {% if settings.product_card_show_review_badge %}
      {% if product.metafields.reviews.rating.value != blank %}
        {% capture badge_content %}
          {% assign rating = product.metafields.reviews.rating.value | strip %}
          {{ rating | times: 1 | round: 2 }}
          {% render 'component__icon', icon: 'star', size: '12', class: 'ml-1' %} 
        {% endcapture %}
        {% render 'component__badge', 
          color: badge_background,
          text: 'text',
          icon: '',
          content: badge_content 
        %}
      {% endif %}
    {% endif %}

    {% comment %} Tag badge {% endcomment %}
    {% for tag in product.tags %}
      {% if tag contains "badge_" %}
        {% capture badge_content %}{{ tag | remove: "badge_" }}{% endcapture %}
        {% render 'component__badge', 
          color: badge_background,
          text: 'secondary',
          icon: '',
          content: badge_content 
        %}
      {% endif %}
    {% endfor %}

    {% comment %} Savings {% endcomment %}
    {% if settings.product_card_savings_badge != 'none' %}
      {% assign discount = 0 %}
      {% for variant in product.variants %}
        {% assign current_discount = 0 %}
        {% if settings.product_card_savings_badge == "percent" %}
          {% assign current_discount = variant.compare_at_price | minus: variant.price | times: 100 | divided_by: variant.compare_at_price %}
        {% else %}
          {% assign current_discount = variant.compare_at_price | minus: variant.price %}
        {% endif %}
        {% if current_discount > discount %}
          {% assign discount = current_discount %}
        {% endif %}
      {% endfor %} 
      {% if settings.product_card_savings_badge == "percent" %}
        {% capture badge_content %} {{ 'products.general.save' | t }} {{ discount | strip | append: '%' }} {% endcapture %}
      {% else %}
        {% capture badge_content %}{{ 'products.general.save' | t }} {{ discount | money }}{% endcapture %}
      {% endif %}
      {% if discount > 0 %}  
        {% render 'component__badge', 
          color: badge_background,
          text: 'secondary',
          icon: '',
          content: badge_content 
        %}
      {% endif %}
    {% endif %}
  </div>
  
  {% comment %} Images {% endcomment %}  
  {% if settings.show_collection_url %}
    {% assign url = product.url | within: collection %}
  {% else %}
    {% assign url = product.url %}
  {% endif %}
  <a href="{{ url }}"
    class="grid grid-cols-4 mb-2 overflow-hidden
      {% if settings.product_card_border_style == 'image' %}
        border--radius
        {{ settings.product_card_color_border }} 
      {% endif %}"
    style="
      gap: {{ settings.layout_gap_size }}px;">

    <div class="grid w-full col-span-3 col-start-1">
      <div class="overflow-hidden">
        {% unless product.featured_image == blank %}
          {% render 'component__image', 
            image: product.featured_image,
            aspect_ratio: settings.product_card_ratio,
            background: '',
            crop: 'object-cover',
            max_width: 900,
            container_class: '',
            image_class: 'w-full',
            enable_lazy_load: true,
            include_2x: true
          %}
        {% endunless %}
      </div>
    </div>

    <div class="grid items-stretch w-full col-start-4"
      style="
        gap: {{ settings.layout_gap_size }}px;">

      {% if product.images[1] == blank %}
        {% assign image1 = product.images[0] %}
      {% else %}
        {% assign image1 = product.images[1] %}
      {% endif %}
      <div class="">
        {% render 'component__image', 
          image: image1,
          aspect_ratio: settings.product_card_ratio,
          background: '',
          crop: 'object-cover',
          max_width: 200,
          container_class: 'h-full',
          image_class: 'w-full',
          enable_lazy_load: true,
          include_2x: true
        %}
      </div>
      
      {% if product.images[2] == blank %}
        {% assign image2 = product.images[0] %}
      {% else %}
        {% assign image2 = product.images[2] %}
      {% endif %}
      <div class="">
        {% render 'component__image', 
          image: image2,
          aspect_ratio: settings.product_card_ratio,
          background: '',
          crop: 'object-cover',
          max_width: 200,
          container_class: 'h-full',
          image_class: 'w-full',
          enable_lazy_load: true,
          include_2x: true
        %}
      </div>

      {% if product.images[3] == blank %}
        {% assign image3 = product.images[0] %}
      {% else %}
        {% assign image3 = product.images[3] %}
      {% endif %}
      <div class="">
        {% render 'component__image', 
          image: image3,
          aspect_ratio: settings.product_card_ratio,
          background: '',
          crop: 'object-cover',
          max_width: 200,
          container_class: 'h-full',
          image_class: 'w-full',
          enable_lazy_load: true,
          include_2x: true
        %}
      </div>
      
    </div>

  </a>

  {% comment %} Content {% endcomment %}
  <a 
    class="
      hover:no-underline flex flex-col gap-0.5 no-underline whitespace-normal
      {% if settings.product_card_alignment == "center" %}
        text-center items-center
      {% endif %}
      {% if settings.product_card_alignment == "left" %}
        text-left items-start
      {% endif %}
      {% if settings.product_card_alignment == "right" %}
        text-right items-end
      {% endif %}
      {% if settings.product_card_border_style == "thumbnail" %}
        px-4 py-4
      {% endif %}
    "
    href="{{ url }}" 
    tabindex="-1"
    >

    {% comment %} Title {% endcomment %}
    <h3 
      class="
        type--base !leading-tight mb-0
        {% unless settings.product_card_alignment == "justified" %}
          w-full
        {% endunless %}
        {{ settings.product_card_title_capitilization }}
        {{ settings.product_card_title_font }}
      ">
      {{ product.title }}
    </h3>

    {% comment %} Sku {% endcomment %}
    {% if product.has_only_default_variant and settings.product_card_enable_sku %}
      <span 
        class="
          type--small p-0 opacity-75 flex
          {% if settings.product_card_alignment == "center" %}
            justify-center
          {% endif %}
          {% if settings.product_card_alignment == "right" or settings.product_card_alignment == "justified" %}
            justify-end
          {% endif %}
          {% unless settings.product_card_alignment == "justified" %}
            w-full
          {% endunless %}"
        ">{{ product.variants[0].sku }}</span>
    {% endif %}

    {% comment %} Details {% endcomment %}
    {% if settings.product_card_enable_type or settings.product_card_enable_vendor or settings.product_card_enable_count %}
      <ul class="flex flex-wrap items-center gap-x-1 gap-y-0.5 p-0 opacity-75
        {% if settings.product_card_alignment == "center" %}
          justify-center
        {% endif %}
        {% if settings.product_card_alignment == "right" or settings.product_card_alignment == "justified" %}
          justify-end
        {% endif %}
        {% unless settings.product_card_alignment == "justified" %}
          w-full
        {% endunless %}">
        {% if settings.product_card_enable_type %}
          <li class="type--small inline-block last:after:hidden
            {% if settings.type_seperator == 'dot' %} after:content-['\00B7'] {% else %} after:content-['\007C'] {% endif %}">
            {{ product.type }}
          </li>
        {% endif %}
        {% if settings.product_card_enable_vendor %}
          <li class="type--small inline-block last:after:hidden
            {% if settings.type_seperator == 'dot' %} after:content-['\00B7'] {% else %} after:content-['\007C'] {% endif %}">
            {{ product.vendor }}
          </li>
        {% endif %}
        {% if settings.product_card_enable_count %}
          <li class="type--small inline-block last:after:hidden
            {% if settings.type_seperator == 'dot' %} after:content-['\00B7'] {% else %} after:content-['\007C'] {% endif %}">
            {{ product.variants.size }} {{ 'products.general.options' | t }}
          </li>
        {% endif %}
      </ul>
    {% endif %}

    {% comment %} Price {% endcomment %}
    <div 
      class="
        flex flex-wrap items-center gap-1
        {% if settings.product_card_alignment == "center" %}
          justify-center
        {% endif %}
        {% if settings.product_card_alignment == "right" or settings.product_card_alignment == "justified" %}
          justify-end
        {% endif %}
        {% unless settings.product_card_alignment == "justified" %}
          w-full
        {% endunless %}
      ">
      {% if settings.price_range_display == "show_range" %}
        <span 
          class="type--small" 
          x-html="Shopify.formatMoney({{ product.price_min }})">
          {% render 'component__format-price', price: product.price_min %}
        </span>
        {% if product.price_varies %}
          <pre class="m-0 type--small" x-html="'- ' + Shopify.formatMoney({{ product.price_max }})"> - {{ product.price_max | money }}</pre>
        {% endif %}
      {% else %}
      {% if product.price_varies %}
        <span 
          class="type--small" 
          x-html="'{{ 'products.general.up_from' | t }}' + ' ' + Shopify.formatMoney({{ product.price_min }})">
          {{ 'products.general.up_from' | t }} {% render 'component__format-price', price: product.price_min %}
        </span>
        {% else %}
        <pre class="m-0 type--small" x-html="Shopify.formatMoney({{ product.price_min }})"> - {{ product.price_max | money }}</pre> 
      {% endif %}
      {% endif %}
      {% if product.compare_at_price_max > 0 %}
        <span class="type--small">
          <s x-html="Shopify.formatMoney({{ product.compare_at_price_max }})">
            {% render 'component__format-price', price: product.compare_at_price_max %}
          </s>
        </span>
      {% endif %}
    </div>
    {% if product.selected_or_first_available_variant.unit_price %}
      <span class="type--small flex opacity-75 mb-0.5
      {% if settings.product_card_alignment == "center" %}
        justify-center
      {% endif %}
      {% if settings.product_card_alignment == "right" or settings.product_card_alignment == "justified" %}
        justify-end
      {% endif %}">
        <span x-html="Shopify.formatMoney({{ product.selected_or_first_available_variant.unit_price }})">
          {{ product.selected_or_first_available_variant.unit_price | money }}
        </span>
        <span>/</span>
        <span>
          {{ product.selected_or_first_available_variant.unit_price_measurement.reference_value }}
          {{ product.selected_or_first_available_variant.unit_price_measurement.reference_unit }}
        </span>
      </span>
    {% endif %}

    {% comment %} Rating {% endcomment %}
    {% if settings.product_card_enable_review_text %}
      {% assign rating = product.metafields.reviews.rating.value.rating | times: 1 %}
      {% assign max = product.metafields.reviews.rating.value.scale_max %}
      <div 
        class="
          flex items-center w-full
          {% if settings.product_card_alignment == "center" %}
            justify-center
          {% endif %}
          {% if settings.product_card_alignment == "right" or settings.product_card_alignment == "justified" %}
            justify-end
          {% endif %}
          {% unless settings.product_card_alignment == "justified" %}
            w-full
          {% endunless %}
        ">
        {% unless rating == 0 %}
          {% for iteration in (1..max) %}
            {% if iteration <= rating %}
              {% render 'component__icon', 
                icon: 'star', 
                size: '16', 
                class: ''  
              %}
            {% endif %}
          {% endfor %}
          {% assign rating_string = product.metafields.reviews.rating.value | append: "" %}
          {% unless rating_string contains '.0' %}
            {% if rating_string contains '.' %}
              {% render 'component__icon', icon: 'star-half', size: '16' %}
            {% endif %}
          {% endunless %}
          <span class="ml-1 type--small">
            ({{ product.metafields.reviews.rating_count }})
          </span>
        {% endunless %}
      </div>
    {% endif %}

    {% comment %} Swatches {% endcomment %}
    {% if settings.product_card_enable_swatches %}
      {% assign color =  'general.color.color' | t %}
      {% assign colorDowncase =  color | downcase %}
      {% for product_option in product.options_with_values %}
        {% if product_option.name == color or product_option.name == colorDowncase or product_option.name == "Colour" or product_option.name == "colour" %}
          <div class="w-full flex flex-wrap gap-1
          {% if settings.product_card_alignment == "center" %}
            justify-center
          {% endif %}
          {% if settings.product_card_alignment == "right" or settings.product_card_alignment == "justified" %}
            justify-end
          {% endif %}">
            {% for value in product_option.values %}
              {% assign swatch_image = '' %}
              {% if value.swatch %}
                {% assign swatch_color = value.swatch.color %}
                {% assign swatch_image = value.swatch.image | image_url: width: 32 %}
              {% else %}
                {% assign swatch_color = value | handle %}
                {% capture swatch_image_filename %}swatch-{{ value | handle }}.jpg{% endcapture %}
                {% assign swatch_image = images[swatch_image_filename] | image_url: width: 32 %}
              {% endif %}
              

              <div 
                class="btn btn--plain btn--smaller !w-5 !h-5 !min-w-0 !min-h-0 bg-center !p-0"
                style="
                  background-color: {{ swatch_color }};
                  background-image: url('{{ swatch_image | image_url: width: 32 }}');
                ">
              </div>
            {% endfor %}
          </div>
        {% endif %}
      {% endfor %}
    {% endif %}

    {% comment %} Tagline {% endcomment %}
    {% if settings.product_card_enable_tagline and product.metafields.descriptors.subtitle %}
      <p class="type--small !leading-tight mb-0">
        {{ product.metafields.descriptors.subtitle }}
      </p>
    {% endif %}

    {% comment %} Inventory count {% endcomment %}
    {% if settings.product_card_stock_threshold %}
      {% assign product_qty = 0 %}
      {% for variant in product.variants %}
        {% if variant.inventory_quantity > 0 %}
          {% assign product_qty = product_qty | plus: variant.inventory_quantity %}
        {% endif %}
      {% endfor %}
      {% if product_qty < settings.product_card_stock_threshold and product_qty > 0 %}
        {% capture badge %}
          <span class="inline-flex w-2 h-2 mr-2">
            <span class="absolute inline-flex w-2 h-2 rounded-full animate-ping color__bg-primary"></span>
            <span class="inline-flex w-2 h-2 rounded-full color__bg-primary"></span>
          </span>
          <span class="type--small">{{ product_qty }} {{ 'products.inventory.remaining' | t }}</span>
        {% endcapture %}
        {% render 'component__badge', 
          container_class: 'mt-2',
          color: badge_background,
          icon: '',
          content: badge %}
      {% endif %}
    {% endif %}

  </a>
  
</div>